# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import NotifyLoadBalancer_pb2 as NotifyLoadBalancer__pb2


class NotifyLoadBalancerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.StartInstance = channel.unary_unary(
        '/NotifyLoadBalancer/StartInstance',
        request_serializer=NotifyLoadBalancer__pb2.Instance.SerializeToString,
        response_deserializer=NotifyLoadBalancer__pb2.NotifyRequestResult.FromString,
        )
    self.StopInstances = channel.stream_unary(
        '/NotifyLoadBalancer/StopInstances',
        request_serializer=NotifyLoadBalancer__pb2.Instance.SerializeToString,
        response_deserializer=NotifyLoadBalancer__pb2.NotifyRequestResult.FromString,
        )


class NotifyLoadBalancerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def StartInstance(self, request, context):
    """notify the load balancer when an instance comes up
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StopInstances(self, request_iterator, context):
    """notify the load balancer when some instances are terminated
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_NotifyLoadBalancerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'StartInstance': grpc.unary_unary_rpc_method_handler(
          servicer.StartInstance,
          request_deserializer=NotifyLoadBalancer__pb2.Instance.FromString,
          response_serializer=NotifyLoadBalancer__pb2.NotifyRequestResult.SerializeToString,
      ),
      'StopInstances': grpc.stream_unary_rpc_method_handler(
          servicer.StopInstances,
          request_deserializer=NotifyLoadBalancer__pb2.Instance.FromString,
          response_serializer=NotifyLoadBalancer__pb2.NotifyRequestResult.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'NotifyLoadBalancer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
